SHELL := /bin/bash
.DEFAULT:
	@yad \
	--text="<b>ERROR</b>: Paquete no encontrado. Contactar con un administrador." \
	--center \
	--width=350 \
	--text-align=center \
	--image=dialog-error \
	--borders=15

.PHONY: codeblocks
codeblocks:
	$(call apt-uninstall,codeblocks,Codeblocks)

.PHONY: lazarus
lazarus:
	$(call apt-uninstall,lazarus,Lazarus)

.PHONY: swi-prolog
swi-prolog: 
	$(call apt-uninstall,swi-prolog,SWI-Prolog)

.PHONY: bluej
bluej:
	$(call apt-uninstall,bluej,BlueJ) 

.PHONY: eclipse
eclipse:
	rm ~/.local/share/applications/epp.package.java.desktop;\
	rm ~/.local/share/applications/_home_vdiuser_eclipse-installer_.desktop;\
	$(call generic-uninstall,~/.eclipse,Eclipse)

.PHONY: staruml
staruml:
	$(call apt-uninstall,staruml,StarUML)

.PHONY: logisim
logisim:
	$(call apt-uninstall,logisim,Logisim)

.PHONY: postgresql
postgresql:
	$(call apt-uninstall,postgresql,PostgreSQL)

.PHONY: kotlin
kotlin:
	$(call apt-uninstall,kotlin,Kotlin)

.PHONY: alloy
alloy:
	pkexec rm --recursive ~/alloy /usr/bin/alloy | zenity --progress --pulsate --auto-close --no-cancel --text="Desinstalando Alloy" --title="Desinstalación de Alloy";\


.PHONY: android-studio
android-studio:
	$(call generic-uninstall,~/.AndroidStudio ~/.android ~/.local/share/applications/jetbrains-android-studio.desktop,"Android Studio")

.PHONY: visual-studio-code
visual-studio-code:
	$(call apt-uninstall,code,"Visual\ Studio\ Code")

.PHONY: virtualbox
virtualbox:
	@$(call apt-uninstall,virtualbox,VirtualBox);\

.PHONY: mysql
mysql:
	@$(call apt-uninstall,mysql-server,MySQL);
	$(call apt-uninstall,mysql-client,MySQL)

.PHONY: intellij
intellij: 
	@LATEST_VERSION=$$(curl -s https://blog.jetbrains.com/idea/category/releases/ | grep -Eo "[0-9]{4}\.[0-9]*\.[0-9]*" | head -n 1);\
	PACKAGE_NAME=ideaIC-$${LATEST_VERSION}.tar.gz;\
	URL=https://download-cdn.jetbrains.com/idea/ideaIC-$${LATEST_VERSION}.tar.gz;\
	wget --progress=dot $${URL} -P ~ 2>&1 | grep --line-buffered -oP "(\d+(\.\d+)?(?=%))" | yad --progress --button=gtk-cancel:1 --auto-close --borders=15 --width=350 --text="Descargando paquete..." --title="Instalación de IntelliJ";\
	tar -xvzf ~/$${PACKAGE_NAME} -C ~ | yad --progress --pulsate --auto-kill --auto-close --borders=15 --no-buttons --text="Descomprimiendo IntelliJ..." --title="Instalación de IntelliJ";\
	rm ~/$${PACKAGE_NAME};\
	DIRECTORY=$$(ls ~ | grep -o "idea-IC-[0-9]*\.[0-9]*\.[0-9]*" | head -n 1);\
	eval ~/$${DIRECTORY}/bin/idea.sh

.PHONY: npm
npm:
	@$(call apt-uninstall,npm,NPM)

.PHONY: projectlibre
projectlibre:
	$(call apt-uninstall,projectlibre,"ProjectLibre")

.PHONY: postman
postman:
	@TARBALL_NAME="postman.tar.gz";\
	$(call tarball-download,"https://dl.pstmn.io/download/latest/linux_64",$${TARBALL_NAME},Postman)

.PHONY: php
php:
	@$(call apt-uninstall,php,PHP)

.PHONY: pmd
pmd:
	@URL=$$(curl -sL https://api.github.com/repos/pmd/pmd/releases/latest | grep "browser_download_url.*bin\.zip" | cut -d : -f 2,3 | tr -d \");\
	ZIPFILE_NAME=$$(echo $${URL} | cut -d '/' -f 10-);\
	LATEST_VERSION=$$(curl -s https://api.github.com/repos/pmd/pmd/releases/latest | grep "tag_name.*[0-9]*\.*[0-9]*\.[0-9]*" | cut -d "/" -f 2- | tr -d \" | tr -d ,);\
	INSTALL_FOLDER="$${HOME}/pmd-bin-$${LATEST_VERSION}/";\
	echo "FLD: $$INSTALL_FOLDER";\
	$(call zip-download,$${URL},$${ZIPFILE_NAME}, "PMD");\
	pkexec ln -s $${INSTALL_FOLDER}/bin/pmd /usr/bin/

.PHONY: jenkins
jenkins:
	$(call apt-uninstall,jenkins,Jenkins)

# =============== Tipos de instalación genéricos ===============
# Para la mayoría de los paquetes, que siguen un patrón marcado de instalación
# 
# apt-uninstall: Cuando la instalación fue hecha usando el comando apt install [PAQUETE] o se instaló usando un archivo .deb
# 	$1: Nombre del paquete APT.
#	$2: Nomre del programa.
#
# deb-install: Cuando la instalación se hace mediante un archivo de instalación .deb
# 	$1: URL de descarga.
# 	$2: Nombre del paquete (nombre del archivo .deb).
# 	$3: Nombre del programa
#
# generic-install: Cuando la instalación se hace con un script de instalación
#	$1: URL de descarga		
#	$2: Nombre del archivo de instalación (partiendo desde $HOME)
#	$3: Nombre del programa.
#
# tarball-download: Descarga y descomprime un archivo .tar.gz.
# 	$1: URL de descarga.
# 	$2: Nombre del tarball (.tar.gz).
# 	$3: Nombre del programa.
#
# zip-download: Descarga y descomprime un archivo .zip.
#	$1: URL de descarga.
#	$2: Nombre del archivo .zip.
#	$3: Nombre del programa.

define apt-uninstall
	pkexec apt-get autoremove $1 -y | zenity --progress --pulsate --no-cancel --auto-close --width=350 --text="Desinstalando paquete..." --title="Desinstalación de $2"
endef

define generic-uninstall
	pkexec rm -r $1 | zenity --progress --pulsate --no-cancel --auto-close --width=350 --text="Desinstalando paquete..." --title="Desinstalación de $2"
endef